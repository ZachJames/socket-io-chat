{"version":3,"sources":["store.js","socket-api.js","pages/Chat.js","pages/Settings.js","GlobalStyles.js","App.js","index.js"],"names":["SettingsContext","createContext","INITIAL_STATE","username","userColor","error","reducer","state","type","payload","Error","SettingsProvider","children","useReducer","dispatch","Provider","value","useSettings","context","useContext","undefined","socket","io","Container","styled","div","ChatBanner","ChatMessages","Message","li","Username","span","props","color","MessageText","MessageInput","input","Chat","useState","numUsersInChat","setNumUsersInChat","messages","setMessages","messageInput","setMessageInput","useEffect","on","numUsers","message","emit","off","to","duration","map","i","key","text","onSubmit","e","preventDefault","placeholder","onChange","target","colors","Text","p","UsernameInput","ColorSelectList","ul","ColorBoxButton","button","selected","SaveButton","Settings","history","onFocus","onBlur","onClick","setTimeout","newUser","push","createGlobalStyle","App","GlobalStyles","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.882fb4e0.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react'\n\nconst SettingsContext = createContext()\n\nconst INITIAL_STATE = {\n  username: '',\n  userColor: '#3b88eb',\n  error: '',\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case 'SET_USERNAME': {\n      return { ...state, username: payload }\n    }\n    case 'SET_USER_COLOR': {\n      return { ...state, userColor: payload }\n    }\n    case 'SET_ERROR': {\n      return { ...state, error: payload }\n    }\n    case 'CLEAR_ERROR': {\n      return { ...state, error: '' }\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${type}`)\n    }\n  }\n}\n\nfunction SettingsProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n  return <SettingsContext.Provider value={{ state, dispatch }}>{children}</SettingsContext.Provider>\n}\n\nfunction useSettings() {\n  const context = useContext(SettingsContext)\n  if (context === undefined) {\n    throw new Error('useSettings must be used within a SettingsProvider')\n  }\n  return context\n}\n\nexport { SettingsProvider, useSettings }\n","import io from 'socket.io-client'\n\nconst socket = io()\n\nexport default socket\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade'\n\nimport { useSettings } from '../store'\nimport socket from '../socket-api'\n\nconst TYPING_TIMER_LENGTH = 400\n\nconst Container = styled.div`\n  padding: 40px;\n  font-size: 1.4rem;\n`\n\nconst ChatBanner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`\n\nconst ChatMessages = styled.div`\n  overflow: hidden;\n  height: 100%;\n  ul {\n    list-style: none;\n    font-size: 1.3rem;\n  }\n`\n\nconst Message = styled.li`\n  margin-bottom: 7px;\n  line-height: 1.4;\n`\n\nconst Username = styled.span`\n  color: ${props => props.color};\n  font-weight: bold;\n  margin-right: 13px;\n`\n\nconst MessageText = styled.span``\n\nconst MessageInput = styled.input`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  font-size: 1.5rem;\n  padding: 40px;\n  border: none;\n  color: #fff;\n  background: transparent;\n  &:focus {\n    outline: none;\n  }\n`\n\nfunction Chat() {\n  const { state } = useSettings()\n  const [numUsersInChat, setNumUsersInChat] = useState(0)\n  const [messages, setMessages] = useState([])\n  const [messageInput, setMessageInput] = useState('')\n  // const [isTyping, setIsTyping] = useState(false)\n  // const [lastTypingTime, setLastTypingTime] = useState(null)\n\n  useEffect(() => {\n    socket.on('updateChatInfo', ({ numUsers }) => {\n      setNumUsersInChat(numUsers)\n    })\n\n    socket.on('message', message => {\n      setMessages([...messages, message])\n    })\n\n    return () => {\n      socket.emit('disconnect')\n      socket.off()\n    }\n  }, [messages])\n\n  const onSendMessage = e => {\n    e.preventDefault()\n    if (messageInput !== '') {\n      socket.emit('sendMessage', messageInput, () => {\n        setMessageInput('')\n      })\n    }\n  }\n\n  const handleTyping = e => {\n    setMessageInput(e.target.value)\n\n    // if (!isTyping) {\n    //   setIsTyping(true)\n    //   socket.emit('isTyping')\n    // }\n\n    // setLastTypingTime(new Date().getTime())\n\n    // setTimeout(() => {\n    //   const typingTimer = new Date().getTime()\n    //   const timeDiff = typingTimer - lastTypingTime\n    //   if (timeDiff >= TYPING_TIMER_LENGTH && isTyping) {\n    //     socket.emit('stopTyping')\n    //     setIsTyping(false)\n    //   }\n    // }, TYPING_TIMER_LENGTH)\n  }\n\n  return state.username === '' ? (\n    <Redirect to=\"/settings\" />\n  ) : (\n    <Fade duration={1000}>\n      <Container>\n        <ChatBanner>\n          <div>{numUsersInChat} online users</div>\n          <div>Logged in as {state.username}</div>\n        </ChatBanner>\n        <ChatMessages>\n          <ul>\n            {messages.map((message, i) => (\n              <Fade duration={300} key={i}>\n                <Message>\n                  <Username color={message.userColor}>{message.username}</Username>\n                  <MessageText>{message.text}</MessageText>\n                </Message>\n              </Fade>\n            ))}\n          </ul>\n        </ChatMessages>\n        <form onSubmit={onSendMessage}>\n          <MessageInput\n            placeholder=\"Enter a message...\"\n            onChange={handleTyping}\n            value={messageInput}\n          />\n        </form>\n      </Container>\n    </Fade>\n  )\n}\n\nexport default Chat\n","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade'\n\nimport { useSettings } from '../store'\nimport socket from '../socket-api'\n\nconst colors = [\n  '#3b88eb',\n  '#ff4330',\n  '#f78b00',\n  '#58dc00',\n  '#ffea58',\n  '#4ae8c4',\n  '#3824aa',\n  '#d300e7',\n]\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 1.5rem;\n  div {\n    margin-bottom: 60px;\n  }\n`\n\nconst Text = styled.p`\n  margin: 8px;\n  color: #ccc;\n`\n\nconst UsernameInput = styled.input`\n  border: none;\n  background-color: transparent;\n  border-bottom: 1px solid #fff;\n  color: #fff;\n  font-size: inherit;\n  text-align: center;\n  padding: 8px;\n  &:focus {\n    outline: none;\n  }\n  ::placeholder {\n    color: #ccc;\n  }\n`\n\nconst ColorSelectList = styled.ul`\n  list-style: none;\n  margin-top: 15px;\n  display: flex;\n`\n\nconst ColorBoxButton = styled.button`\n  cursor: pointer;\n  width: 35px;\n  height: 35px;\n  margin: 4px;\n  border-radius: 3px;\n  background-color: ${({ color }) => (color ? color : 'blue')};\n  border: ${({ selected }) => (selected ? '2px solid #fff' : 'none')};\n  outline: none;\n  &:hover {\n    filter: brightness(75%);\n    transition: filter 0.3s;\n  }\n`\n\nconst SaveButton = styled.button`\n  border: 1px solid #ccc;\n  padding: 6px 10px 6px 10px;\n  cursor: pointer;\n  background-color: transparent;\n  color: #ccc;\n  border-radius: 3px;\n  font-size: inherit;\n  &:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  &:active {\n    transform: translateY(4px);\n    transition: all 0.3s;\n  }\n`\n\nconst Error = styled.p`\n  color: red;\n  margin-bottom: 15px;\n`\n\nfunction Settings({ history }) {\n  const { state, dispatch } = useSettings()\n\n  const onSave = () => {\n    if (state.username === '') {\n      dispatch({ type: 'SET_ERROR', payload: 'You must set a username.' })\n      setTimeout(() => dispatch({ type: 'CLEAR_ERROR' }), 5000)\n      return\n    }\n\n    const newUser = { username: state.username, userColor: state.userColor }\n\n    socket.emit('addUserToChat', newUser)\n    history.push('/chat')\n  }\n\n  return (\n    <Fade duration={1200}>\n      <Container>\n        <Error>{state.error}</Error>\n        <div>\n          <UsernameInput\n            placeholder=\"Enter username...\"\n            onFocus={e => (e.target.placeholder = '')}\n            onBlur={e => (e.target.placeholder = 'Enter username...')}\n            onChange={e => dispatch({ type: 'SET_USERNAME', payload: e.target.value })}\n            value={state.username}\n          />\n        </div>\n        <div>\n          <Text>Choose your color:</Text>\n          <ColorSelectList>\n            {colors.map(color => (\n              <li key={color}>\n                <ColorBoxButton\n                  selected={state.userColor === color}\n                  color={color}\n                  onClick={() => dispatch({ type: 'SET_USER_COLOR', payload: color })}\n                />\n              </li>\n            ))}\n          </ColorSelectList>\n        </div>\n        <div>\n          <SaveButton onClick={onSave}>Save</SaveButton>\n        </div>\n      </Container>\n    </Fade>\n  )\n}\n\nexport default Settings\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }    \n    html, body {\n        background-color: #000;\n        font-family: 'Roboto', sans-serif;\n        color: #fff;\n        -webkit-font-smoothing: antialiased;\n    }   \n`\n","import React from 'react'\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\n\nimport { SettingsProvider } from './store'\nimport { Chat, Settings } from './pages'\nimport GlobalStyles from './GlobalStyles'\n\nfunction App() {\n  return (\n    <SettingsProvider>\n      <GlobalStyles />\n      <Router>\n        <Route exact path=\"/\" component={() => <Redirect to=\"/settings\" />} />\n        <Route exact path=\"/settings\" component={Settings} />\n        <Route exact path=\"/chat\" component={Chat} />\n      </Router>\n    </SettingsProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}